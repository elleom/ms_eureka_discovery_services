server.port=${PORT:0}
spring.application.name=users-ws
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
spring.devtools.restart.enabled=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
spring.data.jpa.repositories.bootstrap-mode=default

#spring.datasource.username=sa
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.datasource.url=jdbc:mysql://localhost:3306/ms_users
spring.jpa.hibernate.ddl-auto=update



#gateway.ip = 192.168.0.52
#
#spring.main.allow-circular-references=true
#token.expiration_time=600000
#token.secret=${SECRET}
#login.url=/users/login

spring.config.import=optional:configserver:http://localhost:8012

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#management.endpoint.gateway.enabled=true
management.endpoints.web.exposure.include=beans,health,routes,httptrace,mappings,bus-env,metrics
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true


logging.level.com.lm.usersservice.data.feign.AlbumsServiceClient=DEBUG

# config for fault tolerance
# feign.circuitbreaker.enabled=true

# on circuit breaker systems 'CLOSED' records the amount of times the circuit fails to change to open
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-size=2
# max to go into open state is 50% (if 50% of 2 fails then circuits open)
resilience4j.circuitbreaker.instances.albums-ws.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.albums-ws.automatic-transition-from-open-to-half-open-enabled=true

resilience4j.circuitbreaker.instances.albums-ws.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.albums-ws.minimum-number-of-calls=10
#allows to increase the data to be monitored with actuator
resilience4j.circuitbreaker.instances.albums-ws.event-consumer-buffer-size=10

# higher number is higher priority
resilience4j.retry.retry-aspect-order=2
resilience4j.retry.instances.albums-ws.max-attempts=3
resilience4j.retry.instances.albums-ws.wait-duration=1s

# time for next request multiplies after last failed
resilience4j.retry.instances.albums-ws.enable-exponential-backoff=true
resilience4j.retry.instances.albums-ws.exponential-backoff-multiplier=5

spring.zipkin.base-url=http://localhost:9411
spring.zipkin.enabled=true
spring.zipkin.sender.type=web
spring.sleuth.sampler.probability=1.0

logging.file.name=users-ws.log






